{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","App","useState","query","setQuery","toLowerQuery","toLowerCase","visibleMovies","list","copyList","filter","eachList","includes","trim","seachQueryInField","moviesFromServer","htmlFor","value","onChange","event","target","type","id","placeholder","ReactDOM","render","document","getElementById"],"mappings":"qSAEaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,4BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,c,OCYrB,IAAMC,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAeF,EAAMG,cAErBC,EAjBR,SAA2BC,EAA3B,GAAoD,IAAjBH,EAAgB,EAAhBA,aAC7BI,EAAQ,YAAOD,GAQnB,OANIH,IACFI,EAAWA,EAASC,QAAO,SAAAC,GAAQ,OAAIA,EAASlB,MAAMa,cACnDM,SAASP,EAAaQ,SACpBF,EAASjB,YAAYY,cAAcM,SAASP,EAAaQ,YAGzDJ,EAQeK,CAAkBC,EAAkB,CAAEV,iBAE5D,OACE,sBAAKhB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAO2B,QAAQ,eAAe3B,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACE4B,MAAOd,EACPe,SAAU,SAACC,GACTf,EAASe,EAAMC,OAAOH,QAExBI,KAAK,OACLC,GAAG,eACHjC,UAAU,QACVkC,YAAY,4BAMpB,cAAC,EAAD,CAAYzB,OAAQS,OAGtB,qBAAKlB,UAAU,UAAf,mCCjDNmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a33b2340.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nfunction seachQueryInField(list, { toLowerQuery }) {\n  let copyList = [...list];\n\n  if (toLowerQuery) {\n    copyList = copyList.filter(eachList => eachList.title.toLowerCase()\n      .includes(toLowerQuery.trim())\n      || eachList.description.toLowerCase().includes(toLowerQuery.trim()));\n  }\n\n  return copyList;\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n\n  const toLowerQuery = query.toLowerCase();\n\n  const visibleMovies = seachQueryInField(moviesFromServer, { toLowerQuery });\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                value={query}\n                onChange={(event) => {\n                  setQuery(event.target.value);\n                }}\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">Sidebar goes here</div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}